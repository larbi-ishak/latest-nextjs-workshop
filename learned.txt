TODO: 
* more clear view about api/route
* Middlware
* internationalization i18n


_prd      folders begins with underscore won't be included in routing

layout.tsx , layouts are nested by default
layout are server side components
layout can fetch data

only RootLayout can access html and body tags

you can change routes programmatically using Links, redirect method or useRouter hook
links is the go to and useRouter is the least advised

you can use prefetching with Link element or router.prefetch()
prefetching works only in production

next js uses caching, partial rendering nad soft navigation ( by defalt browser makes a hard reload, but with next js no full page reload, app state is preserved only segements re rendering)


export async function generateStaticParams() {
  const {pages} =  require("../../../data/links.json")
  
  return pages.map((post: any) => ({
    id: post.title,
  }))
}
 export const dynamicParams = false //fallback previously

@somethng used for parallel routing


its always recomended to fetch data on the server whenever its possible

Fetching Data Where It's Needed
If you need to use the same data (e.g. current user) in multiple components in a tree, you do not have to fetch data globally, nor forward props between components. Instead, you can use fetch or React cache in the component that needs the data without worrying about the performance implications of making multiple requests for the same data.

This is possible because fetch requests are automatically memoized.

always use parallel fetching Instead of sequential fetching



